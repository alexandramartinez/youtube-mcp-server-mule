<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:api-gateway="http://www.mulesoft.org/schema/mule/api-gateway" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:http="http://www.mulesoft.org/schema/mule/http" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd http://www.mulesoft.org/schema/mule/api-gateway http://www.mulesoft.org/schema/mule/api-gateway/current/mule-api-gateway.xsd http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
  <http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" basePath="/">
    <http:listener-connection host="0.0.0.0" port="8081" />
  </http:listener-config>
  <http:request-config name="YouTube_Request_config" doc:name="HTTP Request config" basePath="/youtube/v3">
    <http:request-connection host="www.googleapis.com" protocol="HTTPS" />
  </http:request-config>
  <flow name="youtube-search-api-flow" doc:id="c3a4e395-c0f9-4e2e-9a06-9d51eb0e444f">
    <http:listener doc:name="Listener" config-ref="HTTP_Listener_config" path="/search">
      <http:response statusCode="#[vars.httpStatus default 200]">
        <http:headers>
          <![CDATA[#[output application/java
---
{
	"Content-Type" : "application/json"
}]]]>
        </http:headers>
      </http:response>
      <http:error-response statusCode="#[vars.httpStatus default 500]">
        <http:headers>
          <![CDATA[#[output application/java
---
{
	"Content-Type" : "application/json"
}]]]>
        </http:headers>
      </http:error-response>
    </http:listener>
    <logger level="INFO" doc:name="Log Request" message="Received YouTube search request with query parameters: #[attributes.queryParams]" />
    <ee:transform doc:name="Prepare YouTube API Parameters">
      <ee:message />
      <ee:variables>
        <ee:set-variable variableName="youtubeParams">
          <![CDATA[%dw 2.0
output application/java
---
{
    // Required parameters
    "part": attributes.queryParams.part default "snippet",
    "key": attributes.queryParams.key default "",
    // Optional filtering parameters
    "q": attributes.queryParams.q,
    "channelId": attributes.queryParams.channelId,
    "channelType": attributes.queryParams.channelType,
    "eventType": attributes.queryParams.eventType,
    "maxResults": attributes.queryParams.maxResults default "10",
    "order": attributes.queryParams.order default "date",
    "pageToken": attributes.queryParams.pageToken,
    "publishedAfter": attributes.queryParams.publishedAfter,
    "publishedBefore": attributes.queryParams.publishedBefore,
    "regionCode": attributes.queryParams.regionCode,
    "relevanceLanguage": attributes.queryParams.relevanceLanguage default "en",
    "safeSearch": attributes.queryParams.safeSearch default "moderate",
    "topicId": attributes.queryParams.topicId,
    // Type is a reserved word in DataWeave
    "type": attributes.queryParams.'type' default "video",
    "videoCaption": attributes.queryParams.videoCaption,
    "videoCategoryId": attributes.queryParams.videoCategoryId,
    "videoDefinition": attributes.queryParams.videoDefinition,
    "videoDimension": attributes.queryParams.videoDimension,
    "videoDuration": attributes.queryParams.videoDuration,
    "videoEmbeddable": attributes.queryParams.videoEmbeddable,
    "videoLicense": attributes.queryParams.videoLicense,
    "videoSyndicated": attributes.queryParams.videoSyndicated,
    "videoType": attributes.queryParams.videoType
} filterObject ((value, key) -> value != null)
]]>
        </ee:set-variable>
      </ee:variables>
    </ee:transform>
    <http:request method="GET" doc:name="Request YouTube API" config-ref="YouTube_Request_config" path="/search">
      <http:query-params>
        <![CDATA[#[vars.youtubeParams]]]>
      </http:query-params>
    </http:request>
    <logger level="INFO" doc:name="Logger" message="YouTube API response received successfully" />
  </flow>
</mule>